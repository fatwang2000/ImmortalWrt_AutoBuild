name: ImmortalWrt matrix build & release

on:
  schedule:
    - cron: "0 0 */2 * *"   # 每两天运行一次
  workflow_dispatch:        # 手动触发
  push:
    branches-ignore:
      - "**"                # 禁止代码更新自动触发

jobs:
  build:
    name: Build ${{ matrix.config }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - owner1;type1.config
          - owner2;type2.config
          - owner3;type3.config

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ccache-${{ matrix.config }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ matrix.config }}-

      - name: Restore dl cache
        uses: actions/cache@v4
        with:
          path: dl
          key: dl-cache
          restore-keys: |
            dl-cache

      - name: Prepare build environment
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'

      - name: Clone ImmortalWrt
        run: |
          git clone --depth 1 -b master https://github.com/immortalwrt/immortalwrt.git openwrt

      - name: Copy config
        run: |
          cp "${{ github.workspace }}/${{ matrix.config }}" openwrt/.config

      - name: Copy diy.sh if exists
        run: |
          if [ -f "${{ github.workspace }}/diy.sh" ]; then
            cp "${{ github.workspace }}/diy.sh" openwrt/diy.sh
          fi

      - name: Update & install feeds
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          [ -f diy.sh ] && bash diy.sh

      - name: Build (make)
        working-directory: openwrt
        run: |
          make defconfig
          JOBS=$(nproc || echo 2)
          make -j${JOBS} || make -j1 V=s

      - name: Package firmware
        working-directory: openwrt
        run: |
          mkdir -p ../firmware
          fname=$(basename "${{ matrix.config }}" .config)
          job_name="${fname//;/_}"   # 替换分号为下划线
          zip -r9 ../firmware/${job_name}.zip bin/targets/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware_${{ matrix.config }}
          path: firmware/*.zip

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}
          name: "Firmware build ${{ github.run_number }}"
          files: ./artifacts/**/**/*.zip
          body: "Auto firmware build"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prune old releases
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 5
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
